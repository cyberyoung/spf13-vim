set wrap
colorscheme solarized
let g:solarized_termtrans=1

"Bundle
let g:spf13_bundle_groups=['general', 'writing', 'neocomplcache', 'programming', 'ruby', 'python', 'javascript', 'html', 'misc',]
let g:signify_disable_by_default = 1
UnBundle 'MarcWeber/vim-addon-mw-utils'
UnBundle 'tomtom/tlib_vim'
UnBundle 'tpope/vim-repeat'
"UnBundle 'bling/vim-airline'
"UnBundle 'bling/vim-bufferline'
UnBundle 'osyo-manga/vim-over'
UnBundle 'kana/vim-textobj-user'
UnBundle 'kana/vim-textobj-indent'


" multi-encoding setting
if has("multi_byte")
  "set bomb
  set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,sjis,euc-kr,ucs-2le,latin1
  " CJK environment detection and corresponding setting
  if v:lang =~ "^zh_CN"
    " Use cp936 to support GBK, euc-cn == gb2312
    set encoding=cp936
    set termencoding=cp936
    set fileencoding=cp936
  elseif v:lang =~ "^zh_TW"
    " cp950, big5 or euc-tw
    " Are they equal to each other?
    set encoding=big5
    set termencoding=big5
    set fileencoding=big5
  elseif v:lang =~ "^ko"
    " Copied from someone's dotfile, untested
    set encoding=euc-kr
    set termencoding=euc-kr
    set fileencoding=euc-kr
  elseif v:lang =~ "^ja_JP"
    " Copied from someone's dotfile, untested
    set encoding=euc-jp
    set termencoding=euc-jp
    set fileencoding=euc-jp
  endif
  " Detect UTF-8 locale, and replace CJK setting if needed
  if v:lang =~ "utf8$" || v:lang =~ "UTF-8$"
    set encoding=utf-8
    set termencoding=utf-8
    set fileencoding=utf-8
  endif
else
  echoerr "Sorry, this version of (g)vim was not compiled with multi_byte"
endif

"comment out lines
"syntax enable
"set number!
"set background=dark
"set pastetoggle=<f7>
" let g:pymode_rope_lookup_project = 0
"set wildignore+=.CFUserTextEncoding,.codeintel,.jmc,.proxyrc,.ssh,.vimrc,.bundles ,.DS_Store,.config,.jxrc,.pythonhist,.subversion,.vimrc,.local ,.ShadowsocksX,.cpan,.lesshst,.recentf,.swt,.vimswap ,.Trash,.cups,.local,.rnd,.tmux,.conf,.vimundo ,.Xauthority,.distlib,.m2,.ropeproject,.vagrant,.d,.vimviews ,.atom,.eclipse,.miaozhenrc,.screenrc,.vim,.xunlei,.lixian,.config ,.bash_history,.emacs,.d,.neocomplcache,.sh_history,.vimbackup,.xunlei,.lixian,.cookies ,.bash_profile,.gem,.npm,.slime,.viminfo,.zcompdump-李旸的MacBookPro-5,.0,.2 ,.bashrc,.gitconfig,.nutstore,.slime-history,.eld,.vimperator,.zsh-update ,.boot2docker,.idlerc,.oh-my-zsh,.spf13-vim-3,.vimrc,.zsh_history ,.cache,.ido,.last,.pip,.sqlite_history,.vimrc,.before,.zshrc
"let g:ctrlp_custom_ignore = {
"  \ 'dir':  '\v[\/]\.(atom|cache|config|git|hg|svn)$',
"  \ 'file': '\v\.(exe|so|dll)$',
"  \ }
